{
  "name" : "Inclusion of Prior Knowledge in Factorization Models",
  "cells" : [ {
    "id" : 0,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "drawbacks",
      "extraFields" : { }
    }
  }, {
    "id" : 1,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Drawbacks of OpenIE and Embeddings\n\n<img src=\"../../assets/figures/07/MF-8.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 2,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "drawbacks2",
      "extraFields" : { }
    }
  }, {
    "id" : 3,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Drawbacks of OpenIE and Embeddings\n\n<img src=\"../../assets/figures/07/MF-13.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 4,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "drawbacks3",
      "extraFields" : { }
    }
  }, {
    "id" : 5,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Drawbacks of OpenIE and Embeddings\n\n<img src=\"../../assets/figures/07/MF-14.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 6,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "drawbacks4",
      "extraFields" : { }
    }
  }, {
    "id" : 7,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Drawbacks of OpenIE and Embeddings\n\n<img src=\"../../assets/figures/07/MF-15.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 8,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "drawbacks5",
      "extraFields" : { }
    }
  }, {
    "id" : 9,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Drawbacks of OpenIE and Embeddings\n\n<img src=\"../../assets/figures/07/MF-16.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 10,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "facts",
      "extraFields" : { }
    }
  }, {
    "id" : 11,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Factual Prior Knowledge</h3>\n\n<img src=\"../../assets/figures/mfprior.png\" width=\"100%\">\n\n- Collective Matrix Factoriztion",
      "extraFields" : { }
    }
  }, {
    "id" : 12,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "hard",
      "extraFields" : { }
    }
  }, {
    "id" : 13,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Hard Constraints</h3>\n(e.g. Chang et al. 2014)\n\n<img src=\"../../assets/figures/constrainedmf.png\" width=\"100%\">",
      "extraFields" : { }
    }
  }, {
    "id" : 14,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "logic",
      "extraFields" : { }
    }
  }, {
    "id" : 15,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>First-order Logic Prior Knowledge</h3>\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\"><b>Representation Learning</b>: hard to fix mistakes\n$$\n\\neg \\text{person}(x) \\Rightarrow \\neg \\text{place of birth}(x,y)\n$$\n<li class=\"fragment\" data-fragment-index=\"2\"><b>Distant Supervision</b>: fails for no or little alignment\n$$\n\\text{#1-is-a-student-in-#2-'s-lab}(x,y) \\Rightarrow \\text{supervisedBy}(x,y)$$\n<li class=\"fragment\" data-fragment-index=\"3\"><b>Pros</b>: Formulae are easy to modify and improve\n<li class=\"fragment\" data-fragment-index=\"4\"><b>Cons</b>: Brittle, no generalization and inference can become intractable\n<li class=\"fragment\" data-fragment-index=\"5\"><i>Markov Logic Networks</i>: easy to modify, generalize well, but inference often intractable in practice\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 16,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "overview",
      "extraFields" : { }
    }
  }, {
    "id" : 17,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Low-rank Logic Embeddings \n\n<img src=\"../../assets/figures/07/Overview-7.png\" height=\"300\">",
      "extraFields" : { }
    }
  }, {
    "id" : 18,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mflogic0",
      "extraFields" : { }
    }
  }, {
    "id" : 19,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-0.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 20,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mflogic1",
      "extraFields" : { }
    }
  }, {
    "id" : 21,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-1.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 22,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic2",
      "extraFields" : { }
    }
  }, {
    "id" : 23,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-2.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 24,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic3",
      "extraFields" : { }
    }
  }, {
    "id" : 25,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-3.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 26,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic4",
      "extraFields" : { }
    }
  }, {
    "id" : 27,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-4.png\" height=\"500\">\n",
      "extraFields" : { }
    }
  }, {
    "id" : 28,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic5",
      "extraFields" : { }
    }
  }, {
    "id" : 29,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-5.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 30,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic6",
      "extraFields" : { }
    }
  }, {
    "id" : 31,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-6.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 32,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic7",
      "extraFields" : { }
    }
  }, {
    "id" : 33,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-7.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 34,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic8",
      "extraFields" : { }
    }
  }, {
    "id" : 35,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-8.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 36,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic9",
      "extraFields" : { }
    }
  }, {
    "id" : 37,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-9.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 38,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic10",
      "extraFields" : { }
    }
  }, {
    "id" : 39,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-10.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 40,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic11",
      "extraFields" : { }
    }
  }, {
    "id" : 41,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-11.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 42,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic12",
      "extraFields" : { }
    }
  }, {
    "id" : 43,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-12.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 44,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic13",
      "extraFields" : { }
    }
  }, {
    "id" : 45,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-13.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 46,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "mfLogic14",
      "extraFields" : { }
    }
  }, {
    "id" : 47,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Logic and Matrix Factorization\n\n<img src=\"../../assets/figures/07/Baselines-14.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 48,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "injectfacts",
      "extraFields" : { }
    }
  }, {
    "id" : 49,
    "compiler" : "html",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Matrix Factorization is “Injecting” Atomic Formulae</h3>\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\">Training facts are ground atoms: $$\\mathcal{F} = r_s(e_i, e_j)$$\n</li>\n<li class=\"fragment\" data-fragment-index=\"2\">Let [•] denote mapping from symbolic formulae to expectations\n$$[r_s(e_i, e_j)] := \\sigma(\\mathbf{v}_{s} \\cdot \\mathbf{v}_{ij})$$</li>\n<li class=\"fragment\" data-fragment-index=\"3\">Training objective:\n    $$\\max_{\\{\\mathbf{v}_s\\}, \\{\\mathbf{v}_{ij}\\}} \\sum_{\\mathcal{F} \\in \\mathfrak{F}} \\log([\\mathcal{F}])$$</li>\n<li class=\"fragment\" data-fragment-index=\"4\">Can we do this for <i>any</i> propositional formulae? \n  $$[\\mathcal{F}] = [r_1(e_i\\,e_j) \\wedge \\neg r_2(e_i\\,e_j) \\Rightarrow r_3(e_i\\,e_j)]$$</li>    \n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 50,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "difflogic",
      "extraFields" : { }
    }
  }, {
    "id" : 51,
    "compiler" : "html",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Differentiable Logic Formulae</h3>\n\n$$\n[\\mathcal{F}] = \\begin{cases}\n   \\sigma(\\mathbf{v}_s \\cdot \\mathbf{v}_{ij}) & \\text{ if } \\mathcal{F} = r_s(e_i, e_j), \\text{ i.e., facts}\\newline\n   1 - [\\mathcal{A}] & \\text{ if } \\mathcal{F} = \\neg\\mathcal{A}\\newline\n  [\\mathcal{A}] * [\\mathcal{B}] &\\text{ if } \\mathcal{F} = \\mathcal{A} \\wedge \\mathcal{B}\n\\end{cases}\n$$\n\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\">\nFrom negation and conjunction we can build any propositional formula\n    <ul><li>Disjunction: $$[\\mathcal{A} \\vee \\mathcal{B}] = 1 - (1 - [\\mathcal{A}])*(1 - [\\mathcal{B}])$$\n    </li>\n    <li>Implication:$$[\\mathcal{A} \\Rightarrow \\mathcal{B}] = [\\mathcal{A}]([\\mathcal{B}] - 1) + 1$$\n    </li>\n    </ul>    \n</li>\n<li class=\"fragment\" data-fragment-index=\"2\">\n    Jointly maximize the log-likelihood of atomic and propositional formulae \n \n    $$\\max_{\\{\\mathbf{v}_s\\}, \\{\\mathbf{v}_{ij}\\}} \\sum_{\\mathcal{F} \\in \\mathfrak{F}} \\log([\\mathcal{F}])$$\n</li>\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 52,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "grounding",
      "extraFields" : { }
    }
  }, {
    "id" : 53,
    "compiler" : "html",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Grounding</h3>\n$$\\forall x,y: r_s(x,y) \\Rightarrow r_t(x,y)$$\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\">Grounding based on all observed facts for premise \\(r_s(e_i,e_j)\\) and consequent \\(r_t(e_i,e_j)\\)\n</li>\n<li class=\"fragment\" data-fragment-index=\"2\">\nSample unobserved facts \\(r_s(e_i', e_j')\\) and \\(r_t(e_i', e_j')\\)\n</li>\n<li class=\"fragment\" data-fragment-index=\"3\">Add propositional formulae to the matrix factorization training objective\n<ul>\n    <li>\\([r_s(e_i,e_j) \\Rightarrow r_t(e_i,e_j)]\\)</li>\n    <li>\\([r_s(e_i',e_j') \\Rightarrow r_t(e_i',e_j')]\\)</li>\n</ul>   \n</li>\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 54,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results1",
      "extraFields" : { }
    }
  }, {
    "id" : 55,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Zero-shot Relation Learning\n\n<img src=\"../../assets/figures/07/zero-shot-1.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 56,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results2",
      "extraFields" : { }
    }
  }, {
    "id" : 57,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Zero-shot Relation Learning\n\n<img src=\"../../assets/figures/07/zero-shot-2.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 58,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results3",
      "extraFields" : { }
    }
  }, {
    "id" : 59,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Zero-shot Relation Learning\n\n<img src=\"../../assets/figures/07/zero-shot-3.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 60,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results4",
      "extraFields" : { }
    }
  }, {
    "id" : 61,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Zero-shot Relation Learning\n\n<img src=\"../../assets/figures/07/zero-shot-4.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 62,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results5",
      "extraFields" : { }
    }
  }, {
    "id" : 63,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Zero-shot Relation Learning\n\n<img src=\"../../assets/figures/07/zero-shot-5.png\" height=\"500\">",
      "extraFields" : { }
    }
  }, {
    "id" : 64,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results",
      "extraFields" : { }
    }
  }, {
    "id" : 65,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Results on Full Dataset\n\n<img src=\"../../assets/figures/07/results.png\" height=\"500\">",
      "extraFields" : { }
    }
  } ],
  "config" : { }
}
