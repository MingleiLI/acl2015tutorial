{
  "name" : "Test Notebook",
  "cells" : [ {
    "id" : 0,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "1",
      "extraFields" : { }
    }
  }, {
    "id" : 1,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Blah\n\nBlub",
      "extraFields" : { }
    }
  }, {
    "id" : 2,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "2",
      "extraFields" : { }
    }
  }, {
    "id" : 3,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "import uk.ac.ucl.cs.mr.acltutorial._\nimport MatrixRenderer._\n\nval layout = Layout(colHeaderSize=100, ch=30, cw=40)\n\nval col1Embedding = colEmbedding(0,2, Seq(1,2))\n\nval m1 = Matrix(Seq(Cell(0,0,1.0)),Seq(RowLabel(0,\"row1\")),Seq(ColLabel(0,\"col1\")), Nil) \n\nval m2 = Matrix(Seq(Cell(1,0,1.0),Cell(1,1,\"Blah\")),Seq(RowLabel(1,\"row1\"),RowLabel(0,\"row2\")),Seq(ColLabel(1,\"col2\")), Seq(1)) + colEmbedding(0,2, Seq(1,2)) + colEmbedding(1,2, Seq(1,2)) + rowEmbedding(1,2,Seq(2,1))\n\nval matrices = Seq(m1,m2,m2 + rowEmbedding(0,2,Seq(2,1)))\n\n\nMatrixRenderer.render(matrices,layout)",
      "extraFields" : {
        "aggregatedCells" : "[]"
      }
    }
  } ],
  "config" : { }
}
