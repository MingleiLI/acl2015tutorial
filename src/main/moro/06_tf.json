{
  "name" : "Tensor Factorization",
  "cells" : [ {
    "id" : 44,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "homer",
      "extraFields" : { }
    }
  }, {
    "id" : 45,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "<img src=\"../../assets/figures/homer.jpg\" width=\"90%\">",
      "extraFields" : { }
    }
  }, {
    "id" : 0,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "tensor",
      "extraFields" : { }
    }
  }, {
    "id" : 1,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Tensors</h3>\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\">\nIn many real-world data more then two variables are interacting\n<ul>\n    <li>Subject, verb, object triplets \\((s,v,o)\\)</li>\n    <li>Binary relation triplets \\((r_s, e_i, e_j)\\)</li>\n    <li>Tag-recommendation: user, item, tag triplets \\((u, i, t)\\)</li>\n    <li>User-movie-song-book recommendation: \\((u, m, s, b)\\)</li>\n</ul>    \n</li>    \n<li class=\"fragment\" data-fragment-index=\"2\">2D Matrix representation is an unnatural choice</li>\n<li class=\"fragment\" data-fragment-index=\"3\"><b>Tensors</b> are the higher-order generalization of matrices</li>\n<li class=\"fragment\" data-fragment-index=\"4\">Can be used to model \\(N\\)-way interactions</li>\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 2,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "notation",
      "extraFields" : { }
    }
  }, {
    "id" : 3,
    "compiler" : "html",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Notation</h3>\n<font color=\"blue\"><b>(Kolda and Bader, 2009)</b></font>\n\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\">\nVectors: boldface lower-case letters \\(\\mathbf{v}\\)\n</li>    \n<li class=\"fragment\" data-fragment-index=\"2\">Matrices: boldface capital letters \\(\\mathbf{M}\\)</li>\n<li class=\"fragment\" data-fragment-index=\"3\">Tensors: Euler script letters \\(\\mathcal{T}\\)</li>\n<li class=\"fragment\" data-fragment-index=\"4\">Order-\\(N\\) tensor is a multidimensional array with N indices\n\n$$\n\\mathcal{T} \\in \\mathbb{R}^{I_1 \\,\\times\\, I_2 \\,\\times\\, \\cdots\\, \\times\\, I_N}\n$$\n\n</li>\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 4,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "example",
      "extraFields" : { }
    }
  }, {
    "id" : 5,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "\n### Example Order-3 Tensor\n- \\\\(\\mathcal{T} \\in \\mathbb{R}^{|E| \\,\\times\\, |E| \\,\\times\\, |R|}\\\\)\n\n<img src=\"../../assets/figures/tensor-ex.png\" height=\"300\">",
      "extraFields" : { }
    }
  }, {
    "id" : 6,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "fibers",
      "extraFields" : { }
    }
  }, {
    "id" : 7,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Order-3 Tensor Fibers\n\n<img src=\"../../assets/figures/fibers.png\" height=\"300\">\n\n- \\\\(\\mathbf{t}_{\\cdot jk}\\\\) is used to denote the mode-1 **column fiber** when fixing mode 2 to j and mode 3 to k\n- \\\\(\\mathbf{t}_{i \\cdot k}\\\\) mode-2 **row fiber**\n- \\\\(\\mathbf{t}_{ij \\cdot}\\\\) mode-3 **tube fiber**",
      "extraFields" : { }
    }
  }, {
    "id" : 8,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "slices",
      "extraFields" : { }
    }
  }, {
    "id" : 9,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Order-3 Tensor Slices\n\n<img src=\"../../assets/figures/slices.png\" height=\"300\">\n\n- \\\\(\\mathbf{T}_{i\\cdot\\cdot}\\\\) denotes the **horizontal slice** when fixing the mode-1 index to i\n- \\\\(\\mathbf{T}_{\\cdot j \\cdot}\\\\) **vertical slice**\n- \\\\(\\mathbf{T}_{\\cdot\\cdot k}\\\\) **lateral slice**",
      "extraFields" : { }
    }
  }, {
    "id" : 10,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "algebra",
      "extraFields" : { }
    }
  }, {
    "id" : 11,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Tensor Operations\n- Mode-\\\\(N\\\\) **tensor-vector product** \\\\(\\mathcal{T} \\times_N \\mathbf{v}\\\\)\n    - Dot product of each mode-\\\\(N\\\\) fiber in \\\\(\\mathcal{T}\\\\) with \\\\(\\mathbf{v}\\\\)\n    - \\\\(\\mathcal{T} \\in \\mathbb{R}^{I_1\\,\\times\\,\\cdots\\,\\times\\,I_N\\,\\times\\,\\cdots\\,I_n} \\\\)\n    - \\\\(\\mathbf{v} \\in \\mathbb{R}^{I_N}\\\\)\n    - \\\\(\\mathcal{T} \\times_N \\mathbf{v} \\in \\mathbb{R}^{I_1\\,\\times\\,\\cdots\\,\\times\\,I_{N-1}\\,\\times\\,I_{N+1}\\,\\times\\,\\cdots\\,I_n} \\\\)\n    - Resulting tensor has \\\\(N-1\\\\) modes\n\n<img src=\"../../assets/figures/tf-vec.png\" width=\"100%\">\n\n",
      "extraFields" : { }
    }
  }, {
    "id" : 12,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "algebra2",
      "extraFields" : { }
    }
  }, {
    "id" : 13,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Tensor Operations\n- Mode-\\\\(N\\\\) **tensor-matrix product** \\\\(\\mathcal{T} \\times_N \\mathbf{M}\\\\)\n    - Matrix-vector product of each mode-\\\\(N\\\\) fiber in \\\\(\\mathcal{T}\\\\) with \\\\(\\mathbf{M}\\\\)\n    - \\\\(\\mathcal{T} \\in \\mathbb{R}^{I_1\\,\\times\\,\\cdots\\,\\times\\,I_N\\,\\times\\,\\cdots\\,I_n} \\\\)\n    - \\\\(\\mathbf{M}\\in\\mathbb{R}^{K \\,\\times\\, I_N}\\\\)\n    - \\\\(\\mathcal{T} \\times_N \\mathbf{M} \\in \\mathbb{R}^{I_1\\,\\times\\,\\cdots\\,\\times\\,K\\,\\times\\,\\cdots\\,I_n} \\\\)\n\n<img src=\"../../assets/figures/tf-mat.png\" width=\"100%\">\n",
      "extraFields" : { }
    }
  }, {
    "id" : 14,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "algebra3",
      "extraFields" : { }
    }
  }, {
    "id" : 15,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Tensor Operations\n- Mode-\\\\(N\\\\) **matricization** \\\\(\\mathbf{T}_{(N)}\\\\)\n    - Arrange all mode-\\\\(N\\\\) fibers as columns\n\n<img src=\"../../assets/figures/tf-matz.png\" width=\"100%\">    \n",
      "extraFields" : { }
    }
  }, {
    "id" : 16,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "tensorrank",
      "extraFields" : { }
    }
  }, {
    "id" : 17,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Tensor Rank\n\n- **Rank-\\\\(1\\\\) tensor**: outer product of three vectors:\n\n    \\\\(\\mathcal{X} = \\mathbf{a} \\otimes \\mathbf{b} \\otimes \\mathbf{c}\\\\) \n\n    <img src=\"../../assets/figures/tf-rank.png\" height=\"300\">\n\n- Rank of a tensor \\\\(\\mathcal{T}\\\\): smallest number of rank-\\\\(1\\\\) tensor that add up to \\\\(\\mathcal{T}\\\\)",
      "extraFields" : { }
    }
  }, {
    "id" : 18,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "tucker",
      "extraFields" : { }
    }
  }, {
    "id" : 19,
    "compiler" : "html",
    "input" : {
      "sessionId" : null,
      "code" : "<h3>Tucker Decomposition</h3>\n(Tucker, 1966)\n<ul>\n<li>\n    Given: \\(\\mathcal{T} \\in \\mathbb{R}^{p \\,\\times\\, q \\,\\times\\, r}\\)\n</li>\n<li>\n    \\(\\mathcal{T} \\approx \\mathcal{G} \\times_1 \\mathbf{A} \\times_2 \\mathbf{B} \\times_3 \\mathbf{C}\\)\n    <ul>\n        <li class=\"fragment\" data-fragment-index=\"1\">\\(\\mathcal{G}\\) is called <b>core tensor</b></li>\n        <li class=\"fragment\" data-fragment-index=\"2\">Models linear interactions between all three variables</li>\n        <li class=\"fragment\" data-fragment-index=\"3\">\\(\\mathbf{A}\\), \\(\\mathbf{B}\\) and \\(\\mathbf{C}\\) are called <b>loading matrices</b></li>\n    <li class=\"fragment\" data-fragment-index=\"4\"> \\(\\mathcal{G} \\in \\mathbb{R}^{N_1 \\,\\times\\, N_2 \\,\\times\\, N_3}\\), \\(\\mathbf{A} \\in \\mathbb{R}^{N_1 \\,\\times\\, p}\\), \\(\\mathbf{B} \\in \\mathbb{R}^{N_2 \\,\\times\\, q}\\), \\(\\mathbf{C} \\in \\mathbb{R}^{N_3 \\,\\times\\, r}\\)</li>\n    </ul>\n</li>\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 20,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "tucker3example",
      "extraFields" : { }
    }
  }, {
    "id" : 21,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Example\n\n- \\\\(\\mathcal{T} \\approx \\mathcal{G} \\times_1 \\mathbf{R} \\times_2 \\mathbf{E_1} \\times_3 \\mathbf{E}_2\\\\)\n    - \\\\(\\mathcal{T} \\in \\mathbb{R}^{|R| \\,\\times\\, |E| \\,\\times\\, |E|}, \\mathcal{G} \\in \\mathbb{R}^{k \\,\\times\\, k \\,\\times\\, k}\\\\)\n    - \\\\(\\mathbf{R} \\in \\mathbb{R}^{|R| \\,\\times\\, k}, \\mathbf{E}_1 \\in \\mathbb{R}^{|E| \\,\\times\\, k}, \\mathbf{E}_2 \\in \\mathbb{E}^{|R| \\,\\times\\, k}\\\\)\n<img src=\"../../assets/figures/tucker3.png\" height=\"250\">\n\n<ul>\n<li class=\"fragment\" data-fragment-index=\"2\">Problem: in practice hard to estimate parameters\n<ul>\n<li>SGD expensive for core tensor \\(\\mathcal{G}\\)</li>\n<li>Tucker decomposition is not unique</li>\n</ul>\n</li>\n<li class=\"fragment\" data-fragment-index=\"3\">Often one mode is kept fixed (<b>Tucker2</b>)\n</li>\n</ul>\n",
      "extraFields" : { }
    }
  }, {
    "id" : 22,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "tucker2",
      "extraFields" : { }
    }
  }, {
    "id" : 23,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Tucker2 Decomposition\n\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\"> Full Tucker decomposition is called <b>Tucker3</b>\n    <ul><li>Factorizes along all three modes</li></ul>\n</li>    \n<li class=\"fragment\" data-fragment-index=\"2\"> <b>Tucker2</b> factorizes only along two modes\n<ul>\n    <li>One of the loading matrices is the identity matrix</li>\n    <li>For instance: \\(\\mathcal{T} \\approx \\mathcal{G} \\times_1 \\mathbf{A} \\times_2 \\mathbf{B} \\times_3 \\mathit{I}\\)</li>\n</ul>    \n</li>\n<li class=\"fragment\" data-fragment-index=\"3\">Example:\n<img src=\"../../assets/figures/tucker2.png\" height=\"250\">\n</li>\n</ul>\n\n",
      "extraFields" : { }
    }
  }, {
    "id" : 24,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "tucker1",
      "extraFields" : { }
    }
  }, {
    "id" : 25,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Matrix Factorization as Tucker1 Decomposition\n\n- **Tucker1** factorizes only along one mode\n- Is an instance of matrix factorization\n    - Learns vectors for pairs of variables of two modes\n    - Two of the loading matrices are the identity\n    - For instance: \\\\(\\mathcal{T} \\approx \\mathcal{G} \\times_1 \\mathit{I} \\times_2 \\mathit{I} \\times_3 \\mathbf{C}\\\\)\n- Example:\n\n<img src=\"../../assets/figures/tucker1.png\" height=\"250\">\n",
      "extraFields" : { }
    }
  }, {
    "id" : 26,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "candecomp",
      "extraFields" : { }
    }
  }, {
    "id" : 27,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### CANDECOMP/PARAFAC\n(Carroll and Chang, 1970; Harshman, 1970)\n\n- Approximate \\\\(\\mathcal{T}\\\\) with a sum of \\\\(n\\\\) rank-\\\\(1\\\\) tensors\n\n    \\\\(\\mathcal{T} \\approx \\sum_{i=1}^n \\mathbf{a}_i \\otimes \\mathbf{b}_i \\otimes \\mathbf{c}_i\\\\)\n    \n- Loss\n\n    \\\\(\\min_{\\mathbf{a}_i\\mathbf{b}_i\\mathbf{c}_i} ||\\mathcal{T} - \\sum_{i=1}^n \\mathbf{a}_i \\otimes \\mathbf{b}_i \\otimes \\mathbf{c}_i||_F^2\\\\)",
      "extraFields" : { }
    }
  }, {
    "id" : 28,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "rescal",
      "extraFields" : { }
    }
  }, {
    "id" : 29,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### RESCAL\n(Nickel et al, 2011; 2012)\n<br />\n<img src=\"../../assets/figures/nickel.png\" height=\"150\">\n\n<img src=\"../../assets/figures/rescal.png\" height=\"300\">\n",
      "extraFields" : { }
    }
  }, {
    "id" : 30,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "rescal2",
      "extraFields" : { }
    }
  }, {
    "id" : 31,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### RESCAL\n(Nickel et al, 2011; 2012)\n\n<ul>\n<li class=\"fragment\" data-fragment-index=\"1\">Is an instance of Tucker2: \\(\\mathcal{T} \\approx \\mathcal{R} \\times_1 \\mathbf{A} \\times_2 \\mathbf{A}\\)\n<ul>\n    <li class=\"fragment\" data-fragment-index=\"2\">\\(\\mathcal{R}\\) holds one slice \\(\\mathbf{R}_s \\in \\mathbb{R}^{k \\,\\times\\, k}\\) for each relation \\(s\\)</li>\n    <li class=\"fragment\" data-fragment-index=\"3\">\\(\\mathbf{A} \\in \\mathbb{R}^{|E| \\,\\times\\, k}\\) is the dictonary-matrix for all entity embeddings</li>\n    <li class=\"fragment\" data-fragment-index=\"4\">Symmetry assumption: an entity has the same embedding whether used as first or second argument</li>\n</ul>    \n</li>    \n<li class=\"fragment\" data-fragment-index=\"5\">Per relation view (\\(s\\) slices of \\(\\mathcal{T}\\) and \\(\\mathcal{R}\\)): \\(\\mathbf{T}_s \\approx \\mathbf{A} \\mathbf{R}_s \\mathbf{A}^T\\)</li>\n<li class=\"fragment\" data-fragment-index=\"6\"> Loss function\n$$\n    \\min_{\\mathbf{R}_s, \\mathbf{A}} \\sum_s|| \\mathbf{T}_s - \\mathbf{A}\\mathbf{R}_s\\mathbf{A}^T ||^2_F + \\lambda_R ||\\mathbf{R}_s||^2_F +\\lambda_A ||\\mathbf{A}||^2_F\n    $$</li>\n<li class=\"fragment\" data-fragment-index=\"7\">Optimized using Alternating Least Squares</li>\n</ul>",
      "extraFields" : { }
    }
  }, {
    "id" : 32,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "results",
      "extraFields" : { }
    }
  }, {
    "id" : 33,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Results \n\n<img src=\"../../assets/figures/rescal-results.png\" width=\"60%\" height=\"60%\">\n\n",
      "extraFields" : { }
    }
  }, {
    "id" : 34,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "van",
      "extraFields" : { }
    }
  }, {
    "id" : 35,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Factorization Model of Semantic Compositionality\n(Van de Cruys et al, 2013)\n\n<br />\n\n<img src=\"../../assets/figures/van.png\" height=\"350\">\n\n",
      "extraFields" : { }
    }
  }, {
    "id" : 36,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "van2",
      "extraFields" : { }
    }
  }, {
    "id" : 37,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Factorization Model of Semantic Compositionality\n(Van de Cruys et al, 2013)\n\n- Captures three-way interaction of subject, verb, object triplets\n- Instance of Tucker2 decomposition\n    - \\\\(\\mathcal{T} \\approx \\mathcal{V} \\times_1 \\mathbf{N} \\times_2 \\mathbf{N}\\\\)\n    - \\\\(\\mathbf{N} \\in \\mathbb{R}^{|N| \\,\\times\\, k}\\\\) is the dictionary matrix of noun embeddings\n    - \\\\(\\mathcal{V}\\\\) holds slice \\\\(\\mathbf{V}_s\\in \\mathbb{R}^{k \\,\\times\\, k}\\\\) for each verb \\\\(s\\\\)\n",
      "extraFields" : { }
    }
  }, {
    "id" : 38,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "nn",
      "extraFields" : { }
    }
  }, {
    "id" : 39,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Relationship to Neural Networks\nMatrix Factorization: \\\\(\\mathbf{T} \\approx \\sigma(\\mathbf{W}^t_p\\mathbf{W}_r)\\\\)\n\n<img src=\"../../assets/figures/mf-neural.png\" height=\"500\">\n",
      "extraFields" : { }
    }
  }, {
    "id" : 40,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "nn2",
      "extraFields" : { }
    }
  }, {
    "id" : 41,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Relationship to Neural Networks\n(Nickel, 2015)\n\nRESCAL: \\\\(\\mathcal{T} \\approx \\mathcal{R} \\times_1 \\mathbf{A} \\times_2 \\mathbf{A}\\\\)\n\n<img src=\"../../assets/figures/rescal-neural.png\" height=\"500\">\n\n",
      "extraFields" : { }
    }
  }, {
    "id" : 42,
    "compiler" : "section",
    "input" : {
      "sessionId" : null,
      "code" : "nn3",
      "extraFields" : { }
    }
  }, {
    "id" : 43,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Combining Matrix and Tensor Factorization\n(e.g. Chang et al. 2014, Singh et al. 2015)\n\n<img src=\"../../assets/figures/tfmf.png\" height=\"500\">",
      "extraFields" : { }
    }
  } ],
  "config" : { }
}
